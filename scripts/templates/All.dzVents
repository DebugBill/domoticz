-- Check the wiki at
-- http://www.domoticz.com/wiki/%27dzVents%27:_next_generation_LUA_scripting
return {

	-- 'active' controls if this entire script is considered or not
	active = true, -- set to false to disable this script

	-- trigger
	-- can be a combination:
	on = {
		devices = {
			-- scripts is executed if the device that was updated matches with one of these triggers
			'device name', -- device name
			'abc*', -- triggers for all devices which name begins with abc
			258, -- id
		},

		timer = {
			-- timer triggers.. if one matches with the current time then the script is executed
			'at 13:45',
			'at 18:37',
<<<<<<< HEAD
			'every 3 minutes on mon,tue,fri at 16:00-15:00'
=======
			'every 3 minutes on mon,tue,fri at 16:00-15:00',
			function(domoticz)
				-- return true or false
			end
		},

		-- user variable triggers
		variables = {
			'myUserVariable'
		},

		-- security triggers
		security = {
			domoticz.SECURITY_ARMEDAWAY,
			domoticz.SECURITY_ARMEHOME,
		},

		-- scene triggers
		scenes = {
			'myScene'
		},

		-- group triggers
		groups = {
			'myGroup'
		},

		-- http http responses
		httpResponses = {
			'some callback string'
>>>>>>> 98723b7da9467a49222b8a7ffaae276c5bc075c1
		}
	},

	-- actual event code
<<<<<<< HEAD
	-- in case of a timer event or security event, device == nil
	execute = function(domoticz, device)
=======
	-- the second parameter is depending on the trigger
	-- when it is a device change, the second parameter is the device object
	-- similar for variables, scenes and groups and httpResponses
	-- inspect the type like: triggeredItem.isDevice
	execute = function(domoticz, triggeredItem, info)
>>>>>>> 98723b7da9467a49222b8a7ffaae276c5bc075c1
		--[[

		The domoticz object holds all information about your Domoticz system. E.g.:

		local myDevice = domoticz.devices('myDevice')
		local myVariable = domoticz.variables('myUserVariable')
		local myGroup = domoticz.groups('myGroup')
		local myScene = domoticz.sceneds('myScene')

		The device object is the device that was triggered due to the device in the 'on' section above.
		]] --
		-- example
<<<<<<< HEAD
		if (device.state == 'On') then
			device.switchOff().after_min(2)
			domoticz.notify('Light info', 'The light ' .. device.name .. ' will be switched off soon')
=======

		if (triggerdItem.active) then -- state == 'On'
			triggerdItem.switchOff().afterMin(2) -- if it is a switch
			domoticz.notify('Light info', 'The light ' .. triggerdItem.name .. ' will be switched off soon')
>>>>>>> 98723b7da9467a49222b8a7ffaae276c5bc075c1
		end
	end
}
